pipeline {
    agent any

    parameters {
        string(name: 'VAULT_ADDR', description: 'Vault address, e.g. http://65.0.99.22:8200')
        string(name: 'ROLE_ID', description: 'Vault AppRole Role ID')
        string(name: 'SECRET_ID', description: 'Vault AppRole Secret ID')
        string(name: 'SECRET_PATH', description: 'Path to store the secret (e.g., secret/myapp/config)')
        string(name: 'KEY1', description: 'First secret key')
        string(name: 'VAL1', description: 'First secret value')
        string(name: 'KEY2', description: 'Second secret key')
        string(name: 'VAL2', description: 'Second secret value')
    }

    stages {
        stage('Login and Create Secret') {
            steps {
                script {
                    // Get Vault token
                    def vaultToken = sh(
                        script: """
                            curl -s --request POST \\
                              --data '{ "role_id": "${params.ROLE_ID}", "secret_id": "${params.SECRET_ID}" }' \\
                              ${params.VAULT_ADDR}/v1/auth/approle/login | jq -r '.auth.client_token'
                        """,
                        returnStdout: true
                    ).trim()

                    echo "Vault token obtained: ${vaultToken}"

                    // Prepare JSON payload
                    def payload = """{
                        "data": {
                            "${params.KEY1}": "${params.VAL1}",
                            "${params.KEY2}": "${params.VAL2}"
                        }
                    }"""

                    writeFile file: 'payload.json', text: payload

                    // Write secret to Vault
                    sh """
                        curl -s --request POST \\
                          --header "X-Vault-Token: ${vaultToken}" \\
                          --header "Content-Type: application/json" \\
                          --data @payload.json \\
                          ${params.VAULT_ADDR}/v1/${params.SECRET_PATH}
                    """

                    echo "Secret successfully created at path: ${params.SECRET_PATH}"
                }
            }
        }
    }
}
