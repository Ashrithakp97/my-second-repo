#!/bin/bash
pipeline {
    agent any

    parameters {
        string(name: 'VAULT_ADDR', description: 'Vault address')
        string(name: 'ROLE_ID', description: 'AppRole ID')
        string(name: 'SECRET_ID', description: 'AppRole Secret ID')
        string(name: 'SECRET_PATH', description: 'Path to store the secret (e.g., secret/data/myapp/config)')
        string(name: 'KEY1', description: 'Key 1')
        string(name: 'VAL1', description: 'Value 1')
        string(name: 'KEY2', description: 'Key 2')
        string(name: 'VAL2', description: 'Value 2')
    }

    stages {
        stage('Login and Create Secret') {
            steps {
                script {
                    def vaultToken = ''
                      withCredentials([usernamePassword(
                        credentialsId: 'vault-approle-cred',
                        usernameVariable: 'ROLE_ID',
                        passwordVariable: 'SECRET_ID'
                    )]) {
                        vaultToken = sh(
                            script: """
                                curl --insecure --request POST \\
                                  --header "Content-Type: application/json" \\
                                  --data '{ "role_id": "${ROLE_ID}", "secret_id": "${SECRET_ID}" }' \\
                                  ${params.VAULT_ADDR}/v1/auth/approle/login | jq -r '.auth.client_token'
                            """,
                            returnStdout: true
                        ).trim()
                    }

                    // Wrap the token so it's masked in logs
                    wrap([
                        $class: 'MaskPasswordsBuildWrapper',
                        varPasswordPairs: [[password: "${vaultToken}", var: 'VAULT_TOKEN']]
                    ]) {
                        withEnv(["VAULT_TOKEN=${vaultToken}"]) {
                            def payload = """{
                                "data": {
                                    "${params.KEY1}": "${params.VAL1}",
                                    "${params.KEY2}": "${params.VAL2}"
                                }
                            }"""

                            writeFile file: 'payload.json', text: payload

                            sh '''
                                curl -s --request POST \
                                  --header "X-Vault-Token: ${VAULT_TOKEN}" \
                                  --header "Content-Type: application/json" \
                                  --data @payload.json \
                                  ${params.VAULT_ADDR}/v1/secret/data/myapp/config
                            '''
                        }
                    }

                    echo "Secret successfully created at path: ${params.SECRET_PATH}"
                }
            }
        }
    }
}
